{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Desktop\\\\Dropbox\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React, { PureComponent } from 'react'; //import { useDropzone } from 'react-dropzone'\n\nimport { dataService } from '../services/dataService';\nimport { Card, Button } from 'react-bootstrap';\n\nvar jwt = require('jsonwebtoken'); // rfc\n\n\nconst inputFileButton = {\n  marginLeft: \"20px\",\n  backgroundColor: \"#4CAF50\",\n  border: \"none\",\n  color: \"white\",\n  margin: \"4px 2px\",\n  cursor: \"pointer\"\n};\n\nclass FileUpload extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      descr: \"\",\n      result: \"\"\n    };\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  sendFiletoBackend(inputFile, userData, description) {\n    const formData = new FormData();\n    formData.append('inputFile', inputFile);\n    formData.append('userName', userData);\n    formData.append('description', description);\n    console.log(\"UserNAme: \".concat(userData, \", desc: \").concat(description));\n    const params = {\n      method: 'POST',\n      body: formData // headers: { \"Content-Type\": inputFile.type }\n\n    };\n    console.log(params);\n    return fetch(\"\".concat(backendapi.URL, \"/uploadfile\"), params).then(res => {\n      console.log(res);\n      return res;\n    });\n  }\n\n  uploadFile() {\n    const userData = this.props.user;\n    console.log(\"userData: \".concat(userData));\n    const files = this.state.files;\n\n    if (files.length > 0) {\n      this.sendFiletoBackend(files[0], userData, this.state.descr).then(json => {\n        console.log(json);\n        this.setState({\n          result: \"File Uploaded successfully\"\n        });\n        setTimeout(() => {\n          if (this.props.isAdmin) {\n            this.props.refreshList();\n          } else {\n            this.props.refreshList2(userData);\n          }\n        }, 500);\n      }).catch(reason => {\n        console.log(reason);\n        this.props.refreshList();\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"text-center\",\n      style: {\n        margin: '5rem 10rem 2rem 10rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" File Upload Result: \", this.state.result, \" \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      style: {\n        \"marginLeft\": \"20px\"\n      },\n      onChange: e => this.setState({\n        files: e.target.files\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      style: {\n        \"marginLeft\": \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.desc,\n      onChange: e => this.setState({\n        descr: e.target.value\n      }),\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"\\xA0 \\xA0\", React.createElement(Button, {\n      onClick: this.uploadFile,\n      style: {\n        \"padding\": \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/Checkout/Desktop/Dropbox/src/components/FileUpload.jsx"],"names":["React","PureComponent","dataService","Card","Button","jwt","require","inputFileButton","marginLeft","backgroundColor","border","color","margin","cursor","FileUpload","constructor","props","state","files","descr","result","uploadFile","bind","sendFiletoBackend","inputFile","userData","description","formData","FormData","append","console","log","params","method","body","fetch","backendapi","URL","then","res","user","length","json","setState","setTimeout","isAdmin","refreshList","refreshList2","catch","reason","render","e","target","desc","value"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\n//import { useDropzone } from 'react-dropzone'\r\nimport { dataService } from '../services/dataService';\r\nimport { Card, Button } from 'react-bootstrap';\r\nvar jwt = require('jsonwebtoken');\r\n// rfc\r\nconst inputFileButton = {\r\n    marginLeft: \"20px\",\r\n    backgroundColor: \"#4CAF50\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    margin: \"4px 2px\",\r\n    cursor: \"pointer\",\r\n}\r\n\r\nclass FileUpload extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            files: [],\r\n            descr: \"\",\r\n            result: \"\"\r\n        }\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n    }\r\n\r\n    sendFiletoBackend(inputFile, userData, description) {\r\n        const formData = new FormData();\r\n        formData.append('inputFile', inputFile);\r\n        formData.append('userName', userData);\r\n        formData.append('description', description);\r\n        console.log(`UserNAme: ${userData}, desc: ${description}`);\r\n        const params = {\r\n            method: 'POST',\r\n            body: formData,\r\n           // headers: { \"Content-Type\": inputFile.type }\r\n        }\r\n        console.log(params);\r\n        return fetch(`${backendapi.URL}/uploadfile`, params).then(res => {\r\n          console.log(res);\r\n            return res;\r\n        })\r\n    }\r\n\r\n    uploadFile() {\r\n        const userData = this.props.user\r\n        console.log(`userData: ${userData}`);\r\n        const files = this.state.files;\r\n        if (files.length > 0) {\r\n            this.sendFiletoBackend(files[0], userData, this.state.descr)\r\n                .then(json => {\r\n                    console.log(json);\r\n                    this.setState({\r\n                        result: \"File Uploaded successfully\"\r\n                    }); \r\n                    setTimeout(()=> {\r\n                        if (this.props.isAdmin){\r\n                            this.props.refreshList();\r\n                        } else {\r\n                            this.props.refreshList2(userData);\r\n                        } \r\n                    }, 500);\r\n\r\n                })\r\n                .catch(reason => {\r\n                    console.log(reason);\r\n                    this.props.refreshList();\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card className=\"text-center\" style={{ margin: '5rem 10rem 2rem 10rem'}} >\r\n                    <Card.Header> File Upload Result: {this.state.result} </Card.Header>\r\n                    <Card.Body>\r\n                        <input type=\"file\" style={{\"marginLeft\": \"20px\"}} onChange={e => this.setState({\r\n                            files: e.target.files\r\n                        })}> \r\n                        </input>\r\n                       <a  style={{\"marginLeft\": \"40px\"}}> \r\n                       <input\r\n                            value={this.state.desc}\r\n                            onChange={e => this.setState({\r\n                                descr: e.target.value\r\n                            })}\r\n                            placeholder=\"Description\"\r\n                            type=\"text\"\r\n                            name=\"Description\"\r\n                        />\r\n                        &nbsp; &nbsp;\r\n                        <Button onClick={this.uploadFile} style={{\"padding\": \"5px\"}}>Upload</Button>\r\n                       </a>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}