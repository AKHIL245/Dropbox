{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Desktop\\\\Dropbox\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React, { PureComponent } from 'react'; //import { useDropzone } from 'react-dropzone'\n//import { dataService } from '../services/dataService';\n\nimport { Card, Button } from 'react-bootstrap';\n\nvar jwt = require('jsonwebtoken'); // rfc\n// const inputFileButton = {\n//     marginLeft: \"20px\",\n//     backgroundColor: \"#4CAF50\",\n//     border: \"none\",\n//     color: \"white\",\n//     margin: \"4px 2px\",\n//     cursor: \"pointer\",\n// }\n\n\nclass FileUpload extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      descr: \"\",\n      result: \"\"\n    };\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  sendFiletoBackend(fileinput, nameofuser, descr) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const formDetails = new FormData();\n    formDetails.append('inputFile', fileinput);\n    formDetails.append('userName', nameofuser);\n    formDetails.append('description', descr);\n    console.log(\"UserName: \".concat(nameofuser, \", desc: \").concat(descr));\n    const bucketparameters = {\n      method: 'POST',\n      body: formDetails // headers: { \"Content-Type\": inputFile.type }\n\n    };\n    console.log(bucketparameters);\n    return fetch(\"\".concat(backendapi.URL, \"/uploadfile\"), bucketparameters).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  uploadFile() {\n    //const userData = this.props.username\n    //console.log(`userData: ${this.props.username}`);\n    //const files = this.state.files;\n    if (this.state.files.length > 0) {\n      this.sendFiletoBackend(this.state.files[0], this.props.username, this.state.descr).then(json => {\n        console.log(json);\n        this.setState({\n          result: \"Successfully uploaded\"\n        });\n        setTimeout(() => {\n          if (this.props.isAdmin) {\n            this.props.userlistrefresh();\n          } else {\n            this.props.adminlistrefresh(this.props.username);\n          }\n        }, 500);\n      }).catch(reason => {\n        console.log(reason);\n        this.props.userlistrefresh();\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        backgroundColor: 'gray',\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Upload your files here: \", this.state.result, \" \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.setState({\n        files: e.target.files\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.setState({\n        descr: e.target.value\n      }),\n      placeholder: \"Enter....\",\n      type: \"text\",\n      name: \"descr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"\\xA0 \\xA0\", React.createElement(Button, {\n      onClick: this.uploadFile,\n      style: {\n        \"padding\": \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/Checkout/Desktop/Dropbox/src/components/FileUpload.jsx"],"names":["React","PureComponent","Card","Button","jwt","require","FileUpload","constructor","props","state","files","descr","result","uploadFile","bind","sendFiletoBackend","fileinput","nameofuser","backendapi","URL","formDetails","FormData","append","console","log","bucketparameters","method","body","fetch","then","response","length","username","json","setState","setTimeout","isAdmin","userlistrefresh","adminlistrefresh","catch","reason","render","backgroundColor","color","e","target","value"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\n//import { useDropzone } from 'react-dropzone'\r\n//import { dataService } from '../services/dataService';\r\nimport { Card, Button } from 'react-bootstrap';\r\nvar jwt = require('jsonwebtoken');\r\n// rfc\r\n// const inputFileButton = {\r\n//     marginLeft: \"20px\",\r\n//     backgroundColor: \"#4CAF50\",\r\n//     border: \"none\",\r\n//     color: \"white\",\r\n//     margin: \"4px 2px\",\r\n//     cursor: \"pointer\",\r\n// }\r\n\r\nclass FileUpload extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            files: [],\r\n            descr: \"\",\r\n            result: \"\"\r\n        }\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n    }\r\n\r\n    sendFiletoBackend(fileinput, nameofuser, descr) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const formDetails = new FormData();\r\n        formDetails.append('inputFile', fileinput);\r\n        formDetails.append('userName', nameofuser);\r\n        formDetails.append('description', descr);\r\n        console.log(`UserName: ${nameofuser}, desc: ${descr}`);\r\n        const bucketparameters = {\r\n            method: 'POST',\r\n            body: formDetails,\r\n           // headers: { \"Content-Type\": inputFile.type }\r\n        }\r\n        console.log(bucketparameters);\r\n        return fetch(`${backendapi.URL}/uploadfile`, bucketparameters).then(response => {\r\n          console.log(response);\r\n            return response;\r\n        })\r\n    }\r\n\r\n    uploadFile() {\r\n        //const userData = this.props.username\r\n        //console.log(`userData: ${this.props.username}`);\r\n        //const files = this.state.files;\r\n        if (this.state.files.length > 0) {\r\n            this.sendFiletoBackend(this.state.files[0], this.props.username, this.state.descr)\r\n                .then(json => {\r\n                    console.log(json);\r\n                    this.setState({\r\n                        result: \"Successfully uploaded\"\r\n                    }); \r\n                    setTimeout(()=> {\r\n                        if (this.props.isAdmin){\r\n                            this.props.userlistrefresh();\r\n                        } else {\r\n                            this.props.adminlistrefresh(this.props.username);\r\n                        } \r\n                    }, 500);\r\n\r\n                })\r\n                .catch(reason => {\r\n                    console.log(reason);\r\n                    this.props.userlistrefresh();\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card className=\"text-center\" >\r\n                    <Card.Header style={{\r\n        backgroundColor: 'gray', color: 'black'\r\n      }}> Upload your files here: {this.state.result} </Card.Header>\r\n                    <Card.Body>\r\n                        <input type=\"file\"  onChange={e => this.setState({\r\n                            files: e.target.files\r\n                        })}> \r\n                        </input>\r\n                       <a  > \r\n                       <input\r\n                            \r\n                            onChange={e => this.setState({\r\n                                descr: e.target.value\r\n                            })}\r\n                            placeholder=\"Enter....\"\r\n                            type=\"text\"\r\n                            name=\"descr\"\r\n                        />\r\n                        &nbsp; &nbsp;\r\n                        <Button onClick={this.uploadFile} style={{\"padding\": \"5px\"}}>Upload</Button>\r\n                       </a>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}