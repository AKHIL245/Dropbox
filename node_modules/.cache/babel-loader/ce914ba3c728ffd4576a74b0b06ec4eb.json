{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Desktop\\\\Dropbox\\\\src\\\\components\\\\UserPage.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Button, Navbar, Table } from \"react-bootstrap\";\nimport FileUpload from './FileUpload';\nimport LogOut from './LogOut';\nimport LogInPage from './LogInPage';\nimport logo from \"../Dropbox_(service)-Logo.wine.svg\";\n\nvar jwt = require('jsonwebtoken');\n\nclass UserPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    const sessionToken = sessionStorage.getItem(\"token\");\n    this.state = {\n      dataofuserDynamo: [],\n      dataofuser: undefined,\n      desc: \"\",\n      isAdmin: false\n    };\n  }\n\n  getUserDataFromBackend(userName) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const backendparameters = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/retrieveUserRecords/\").concat(userName), backendparameters).then(response => {\n      return response.json();\n    });\n  }\n\n  getAdminDataFromBackend() {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const backendparameters = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/retrieveAdminRecords\"), backendparameters).then(response => {\n      return response.json();\n    });\n  }\n\n  deleteFile(fileName, id) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const backendparameters = {\n      method: 'DELETE',\n      body: JSON.stringify({\n        \"deleteFile\": fileName,\n        \"userId\": id\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/delete_file\"), backendparameters);\n  }\n\n  getUserData(user) {\n    //console.log(\"Called backend for user data\");\n    this.getUserDataFromBackend(user).then(json => {\n      if (Array.isArray(json)) {\n        this.setState({\n          dataofuserDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Unable to fetch user data \", reason);\n    });\n  }\n\n  getAdminData() {\n    //console.log(\"Called backend for admin data\");\n    this.getAdminDataFromBackend().then(json => {\n      if (Array.isArray(json)) {\n        this.setState({\n          dataofuserDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Unable to fetch admin data\", reason);\n    });\n  }\n\n  componentDidMount() {\n    var sessiontoken = sessionStorage.getItem(\"token\");\n    var decrypttoken = jwt.decode(sessiontoken, {\n      complete: true\n    });\n    this.setState({\n      dataofuser: decrypttoken.payload\n    });\n    const isAdmin = decrypttoken.payload && decrypttoken.payload[\"cognito:groups\"] && decrypttoken.payload[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\n    this.setState({\n      isAdmin\n    });\n    setTimeout(() => {\n      if (this.state.isAdmin) {\n        this.getAdminData();\n      } else {\n        this.getUserData(this.state.dataofuser.email);\n      }\n    }, 500);\n  }\n\n  downloadWhenClicked(file) {\n    window.open(\"https://d2k9a10np1c61w.cloudfront.net/\" + file);\n  }\n\n  deleteWhenClicked(fileName, id) {\n    this.deleteFile(fileName, id).then(json => {\n      //console.log(json);\n      setTimeout(() => {\n        if (this.state.isAdmin) {\n          this.getAdminData();\n        } else {\n          this.getUserData(this.state.dataofuser.email);\n        }\n      }, 300);\n    }).catch(reason => {\n      console.log(\"Unable to delete at this time: \", reason);\n    });\n  }\n\n  render() {\n    const isAdmin = this.state.isAdmin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"colornav\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      width: \"200\",\n      height: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Navbar.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"\\xA0\\xA0\", isAdmin && React.createElement(\"a\", {\n      style: {\n        fontWeight: 'bold',\n        color: 'Black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \" AdminMode \"))), this.state.dataofuser && React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), !this.state.dataofuser && React.createElement(LogInPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Welcome \", this.state.dataofuser && React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.dataofuser.email), \". Now you can  keep everything organized, secure and easy to access.\\xA0\\xA0\"))), this.state.dataofuser && React.createElement(FileUpload, {\n      username: this.state.dataofuser.email // desc={this.state.desc}\n      ,\n      userlistrefresh: e => this.getAdminData(),\n      adminlistrefresh: e => this.getUserData(e),\n      isAdmin: isAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, isAdmin && React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Filename\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"FileCreatedDate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"FileUpdatedDate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.dataofuserDynamo.map(list => {\n      return React.createElement(\"tr\", {\n        key: list.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, isAdmin && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, list.userName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, list.fileName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, list.fileCreatedTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, list.fileUpdatedTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, list.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: 'green',\n          color: 'white'\n        },\n        onClick: e => this.downloadWhenClicked(list.fileName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Download\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: 'red',\n          color: 'white'\n        },\n        onClick: e => this.deleteWhenClicked(list.fileName, list.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Delete\")));\n    })))));\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/Checkout/Desktop/Dropbox/src/components/UserPage.jsx"],"names":["React","PureComponent","Button","Navbar","Table","FileUpload","LogOut","LogInPage","jwt","require","UserPage","constructor","props","sessionToken","sessionStorage","getItem","state","dataofuserDynamo","dataofuser","undefined","desc","isAdmin","getUserDataFromBackend","userName","backendapi","URL","backendparameters","method","headers","fetch","then","response","json","getAdminDataFromBackend","deleteFile","fileName","id","body","JSON","stringify","getUserData","user","Array","isArray","setState","catch","reason","console","log","getAdminData","componentDidMount","sessiontoken","decrypttoken","decode","complete","payload","filter","g","length","setTimeout","email","downloadWhenClicked","file","window","open","deleteWhenClicked","render","logo","fontWeight","color","e","map","list","userId","fileCreatedTime","fileUpdatedTime","description","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Button, Navbar, Table } from \"react-bootstrap\";\r\nimport FileUpload from './FileUpload';\r\nimport LogOut from './LogOut';\r\nimport LogInPage from './LogInPage';\r\nimport logo from '../Dropbox_(service)-Logo.wine.svg'\r\nvar jwt = require('jsonwebtoken');\r\n\r\nclass UserPage extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        const sessionToken = sessionStorage.getItem(\"token\")\r\n\r\n        this.state = {\r\n            dataofuserDynamo: [],\r\n            dataofuser: undefined,\r\n            desc: \"\",\r\n            isAdmin: false\r\n        }\r\n    }\r\n\r\n    getUserDataFromBackend(userName) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const backendparameters = {\r\n            method: 'GET',\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/retrieveUserRecords/${userName}`, backendparameters).then(response => {\r\n            return response.json();\r\n        })\r\n    }\r\n\r\n    getAdminDataFromBackend() {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const backendparameters = {\r\n            method: 'GET',\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/retrieveAdminRecords`, backendparameters).then(response => {\r\n            return response.json();\r\n        })\r\n    }\r\n    deleteFile(fileName,id) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const backendparameters = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n                \"deleteFile\": fileName,\r\n                \"userId\": id\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/delete_file`, backendparameters)\r\n    }\r\n\r\n    getUserData(user) {\r\n        //console.log(\"Called backend for user data\");\r\n        this.getUserDataFromBackend(user)\r\n            .then(json => {\r\n                if (Array.isArray(json)) {\r\n                    this.setState({\r\n                        dataofuserDynamo: json\r\n                    });\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to fetch user data \", reason);\r\n            });\r\n    }\r\n    getAdminData() {\r\n        //console.log(\"Called backend for admin data\");\r\n        this.getAdminDataFromBackend()\r\n            .then(json => {\r\n                if (Array.isArray(json)) {\r\n                    this.setState({\r\n                        dataofuserDynamo: json\r\n                    });\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to fetch admin data\", reason);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        var sessiontoken = sessionStorage.getItem(\"token\");\r\n        var decrypttoken = jwt.decode(sessiontoken, { complete: true });\r\n        this.setState({\r\n            dataofuser: decrypttoken.payload\r\n        })\r\n        const isAdmin = decrypttoken.payload && decrypttoken.payload[\"cognito:groups\"] && decrypttoken.payload[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\r\n\r\n        this.setState({ isAdmin });\r\n        setTimeout(()=> {\r\n            if (this.state.isAdmin){\r\n                this.getAdminData()\r\n            } else {\r\n                this.getUserData(this.state.dataofuser.email);\r\n            }\r\n        }, 500);\r\n    }\r\n    \r\n    downloadWhenClicked(file) {\r\n        window.open(\"https://d2k9a10np1c61w.cloudfront.net/\" + file);\r\n    }\r\n\r\n    deleteWhenClicked(fileName, id) {\r\n        this.deleteFile(fileName, id)\r\n            .then(json => {\r\n                //console.log(json);\r\n                setTimeout(()=> {\r\n                if (this.state.isAdmin){\r\n                    this.getAdminData()\r\n                } else {\r\n                    this.getUserData(this.state.dataofuser.email);\r\n                }\r\n            }, 300);\r\n                \r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to delete at this time: \", reason);\r\n            });\r\n    }\r\n    render() {\r\n        const { isAdmin } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar className='colornav' variant=\"dark\">\r\n                    <Navbar.Brand><img src={logo} width = '200' height = '50' /></Navbar.Brand>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            &nbsp;&nbsp;\r\n                            {\r\n                                isAdmin && <a style={{ fontWeight: 'bold', color: 'Black' }}> AdminMode </a>\r\n                            }\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                    {this.state.dataofuser && <LogOut></LogOut>}\r\n                    {!this.state.dataofuser && <LogInPage></LogInPage>}\r\n                </Navbar>\r\n                <div><br></br><br></br><center><h4>Welcome {this.state.dataofuser &&\r\n                                <a >{this.state.dataofuser.email}</a>}. Now you can  keep everything organized, secure and easy to access.&nbsp;&nbsp;\r\n                               </h4></center></div>\r\n                {\r\n                    this.state.dataofuser &&\r\n                    <FileUpload\r\n                        username={this.state.dataofuser.email}\r\n                        // desc={this.state.desc}\r\n                        userlistrefresh={e => this.getAdminData()}\r\n                        adminlistrefresh={e => this.getUserData(e)}\r\n                        isAdmin={isAdmin}\r\n                    >\r\n                    </FileUpload>\r\n                }\r\n                <div>\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr key={0}>\r\n                                {\r\n                                    isAdmin &&\r\n                                    <th>Username</th>\r\n                                }\r\n\r\n                                <th>Filename</th>\r\n                                <th>FileCreatedDate</th>\r\n                                <th>FileUpdatedDate</th>\r\n                                <th>Description</th>\r\n                                <th>Download</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.dataofuserDynamo.map(list => {\r\n                                    return (\r\n                                        <tr key={list.userId}>\r\n                                            {\r\n                                                isAdmin &&\r\n                                                <td>{list.userName}</td>\r\n                                            }\r\n\r\n                                            <td>{list.fileName}</td>\r\n                                            <td>{list.fileCreatedTime}</td>\r\n                                            <td>{list.fileUpdatedTime}</td>\r\n                                            <td>{list.description}</td>\r\n                                            <td><Button style={{\r\n        backgroundColor: 'green', color: 'white'\r\n      }} onClick={e => this.downloadWhenClicked(list.fileName)}>\r\n                                                Download\r\n                                                \r\n                                            </Button></td>\r\n                                            <td><Button style={{\r\n        backgroundColor: 'red', color: 'white'\r\n      }} onClick={e => this.deleteWhenClicked(list.fileName, list.userId)}>\r\n                                                Delete\r\n                                            </Button></td>\r\n                                        </tr>\r\n\r\n                                    );\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default UserPage"]},"metadata":{},"sourceType":"module"}