{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Desktop\\\\Dropbox\\\\src\\\\components\\\\UserPage.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Button, Navbar, Table } from \"react-bootstrap\";\nimport { dataService } from '../services/dataService';\nimport FileUpload from './FileUpload';\nimport LogOut from './LogOut';\nimport LogInPage from './LogInPage';\nimport App from '../App.css';\nimport logo from \"../Dropbox_(service)-Logo.wine.svg\";\n\nvar jwt = require('jsonwebtoken');\n\nglobal.fetch = require('node-fetch');\n\nvar AWSCognito = require('amazon-cognito-identity-js');\n\nclass UserPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    global.fetch = require('node-fetch'); // var AWSCognito = require('amazon-cognito-identity-js');\n    // const backendapi = {\n    //     URL: \"http://localhost:3001\"\n    // }\n\n    const sessionToken = sessionStorage.getItem(\"token\"); // JWT DECODE \n    // Store decoded jwt in session storage\n\n    this.state = {\n      dataofuserDynamo: [],\n      dataofuser: undefined,\n      desc: \"\",\n      isAdmin: false\n    }; //this.setDescription = this.setDescription.bind(this)\n    //this.getAdminData = this.getAdminData.bind(this)\n  } // setDescription(d) {\n  //     this.setState({\n  //         desc: d\n  //     })\n  // }\n\n\n  getUserDataFromBackend(userName) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    console.log(\"user\" + userName);\n    const backendparameters = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/retrieveUserRecords/\").concat(userName), backendparameters).then(response => {\n      console.log(response);\n      return response.json();\n    });\n  }\n\n  getAdminDataFromBackend() {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const backendparameters = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/retrieveAdminRecords\"), backendparameters).then(response => {\n      console.log(response);\n      return response.json();\n    });\n  }\n\n  deleteFile(fileName, id) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const backendparameters = {\n      method: 'DELETE',\n      body: JSON.stringify({\n        \"deleteFile\": fileName,\n        \"userId\": id\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return fetch(\"\".concat(backendapi.URL, \"/delete_file\"), backendparameters);\n  } // getUser() {\n  //     var cognitoPoolCredentials = {\n  //         UserPoolId: 'us-west-1_59p3CzMOg', \n  //         ClientId: '6lf5mkel9kcp68hog30i0p7gtp', \n  //     };\n  //     var userDataPool = new AWSCognito.CognitoUserPool(cognitoPoolCredentials);\n  //     var currentUser = userDataPool.getCurrentUser();\n  //     console.log(\"cognito user\", currentUser);\n  //     if (currentUser != null) {\n  //         currentUser.getSession(function(err, session) {\n  //             if (err) {\n  //                 alert(err.message || JSON.stringify(err));\n  //                 return;\n  //             }\n  //             console.log('session validity: ' + session.isValid());\n  //             // NOTE: getSession must be called to authenticate user before calling getUserAttributes\n  //             currentUser.getUserAttributes(function(err, attributes) {\n  //                 if (err) {\n  //                     // Handle error\n  //                     console.log(err);\n  //                 } else {\n  //                     // Do something with attributes\n  //                     console.log(attributes);\n  //                 }\n  //             });\n  //         });\n  //     }\n  // }\n\n\n  getUserData(user) {\n    console.log(\"Called backend for user data\");\n    this.getUserDataFromBackend(user).then(json => {\n      console.log(json);\n\n      if (Array.isArray(json)) {\n        this.setState({\n          dataofuserDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Unable to fetch user data \", reason);\n    });\n  }\n\n  getAdminData() {\n    console.log(\"Called backend for admin data\");\n    this.getAdminDataFromBackend().then(json => {\n      console.log(json);\n\n      if (Array.isArray(json)) {\n        this.setState({\n          dataofuserDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Unable to fetch admin data\", reason);\n    });\n  }\n\n  componentDidMount() {\n    //console.log(\"sessionStorage\");\n    var sessiontoken = sessionStorage.getItem(\"token\");\n    console.log(sessiontoken); //var decoded = jwt.decode(sessiontoken);\n    // get the decoded payload and header\n\n    var decrypttoken = jwt.decode(sessiontoken, {\n      complete: true\n    });\n    console.log(decrypttoken.header);\n    console.log(decrypttoken.payload); //const userObj = decrypttoken.payload;\n\n    this.setState({\n      dataofuser: decrypttoken.payload\n    });\n    const isAdmin = decrypttoken.payload && decrypttoken.payload[\"cognito:groups\"] && decrypttoken.payload[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\n    this.setState({\n      isAdmin\n    });\n    setTimeout(() => {\n      console.log(\"Email:\" + this.state.dataofuser.email);\n      console.log(\"isAdmin:\" + this.state.isAdmin);\n\n      if (this.state.isAdmin) {\n        this.getAdminData();\n      } else {\n        this.getUserData(this.state.dataofuser.email);\n      }\n    }, 500); //this.getUser()\n  }\n\n  onClickDownLoad(file) {\n    window.open(\"https://d2k9a10np1c61w.cloudfront.net/\" + file);\n  }\n\n  onClickDelete(fileName, id) {\n    this.deleteFile(fileName, id).then(json => {\n      console.log(json);\n      setTimeout(() => {\n        if (this.state.isAdmin) {\n          this.getAdminData();\n        } else {\n          this.getUserData(this.state.dataofuser.email);\n        }\n      }, 300);\n    }).catch(reason => {\n      console.log(\"Unable to delete at this time: \", reason);\n    });\n  } // fetchListAgain\n\n\n  render() {\n    const isAdmin = this.state.isAdmin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"colornav\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      width: \"200\",\n      height: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Navbar.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"\\xA0\\xA0\", isAdmin && React.createElement(\"a\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \" AdminMode \"))), this.state.dataofuser && React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), !this.state.dataofuser && React.createElement(LogInPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Welcome \", this.state.dataofuser && React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.state.dataofuser.email), \". Now you can  keep everything organized, secure and easy to access.\\xA0\\xA0\"))), this.state.dataofuser && React.createElement(FileUpload, {\n      user: this.state.dataofuser.email,\n      desc: this.state.desc,\n      refreshList: e => this.getAdminData(),\n      refreshList2: e => this.getUserData(e),\n      isAdmin: isAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        \"margin\": \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, isAdmin && React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"File Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"File Upload Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"File Updated Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.state.dataofuserDynamo.map(item => {\n      return React.createElement(\"tr\", {\n        key: item.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, isAdmin && React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, item.userName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, item.fileName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, item.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, new Date(item.fileCreatedTime).toLocaleString()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, new Date(item.fileUpdatedTime).toLocaleString()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-success\",\n        onClick: event => this.onClickDownLoad(item.fileName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Download\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-danger\",\n        onClick: event => this.onClickDelete(item.fileName, item.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Delete\")));\n    })))));\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/Checkout/Desktop/Dropbox/src/components/UserPage.jsx"],"names":["React","PureComponent","Button","Navbar","Table","dataService","FileUpload","LogOut","LogInPage","App","jwt","require","global","fetch","AWSCognito","UserPage","constructor","props","sessionToken","sessionStorage","getItem","state","dataofuserDynamo","dataofuser","undefined","desc","isAdmin","getUserDataFromBackend","userName","backendapi","URL","console","log","backendparameters","method","headers","then","response","json","getAdminDataFromBackend","deleteFile","fileName","id","body","JSON","stringify","getUserData","user","Array","isArray","setState","catch","reason","getAdminData","componentDidMount","sessiontoken","decrypttoken","decode","complete","header","payload","filter","g","length","setTimeout","email","onClickDownLoad","file","window","open","onClickDelete","render","logo","fontWeight","e","map","item","userId","description","Date","fileCreatedTime","toLocaleString","fileUpdatedTime","event"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Button, Navbar, Table } from \"react-bootstrap\";\r\nimport { dataService } from '../services/dataService';\r\nimport FileUpload from './FileUpload';\r\nimport LogOut from './LogOut';\r\nimport LogInPage from './LogInPage';\r\nimport App from '../App.css'\r\nimport logo from '../Dropbox_(service)-Logo.wine.svg'\r\nvar jwt = require('jsonwebtoken');\r\nglobal.fetch = require('node-fetch');\r\nvar AWSCognito = require('amazon-cognito-identity-js');\r\n\r\nclass UserPage extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        global.fetch = require('node-fetch');\r\n        // var AWSCognito = require('amazon-cognito-identity-js');\r\n        // const backendapi = {\r\n        //     URL: \"http://localhost:3001\"\r\n        // }\r\n        const sessionToken = sessionStorage.getItem(\"token\")\r\n        \r\n        // JWT DECODE \r\n        // Store decoded jwt in session storage\r\n\r\n        this.state = {\r\n            dataofuserDynamo: [],\r\n            dataofuser: undefined,\r\n            desc: \"\",\r\n            isAdmin: false\r\n        }\r\n        //this.setDescription = this.setDescription.bind(this)\r\n        //this.getAdminData = this.getAdminData.bind(this)\r\n    }\r\n\r\n    // setDescription(d) {\r\n    //     this.setState({\r\n    //         desc: d\r\n    //     })\r\n    // }\r\n    getUserDataFromBackend(userName) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        console.log(\"user\"+userName);\r\n        const backendparameters = {\r\n            method: 'GET',\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/retrieveUserRecords/${userName}`, backendparameters).then(response => {\r\n            console.log(response); \r\n            return response.json();\r\n        })\r\n    }\r\n\r\n    getAdminDataFromBackend() {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const backendparameters = {\r\n            method: 'GET',\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/retrieveAdminRecords`, backendparameters).then(response => {\r\n            console.log(response); \r\n            return response.json();\r\n        })\r\n    }\r\n    deleteFile(fileName,id) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const backendparameters = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n                \"deleteFile\": fileName,\r\n                \"userId\": id\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return fetch(`${backendapi.URL}/delete_file`, backendparameters)\r\n    }\r\n\r\n    // getUser() {\r\n    //     var cognitoPoolCredentials = {\r\n    //         UserPoolId: 'us-west-1_59p3CzMOg', \r\n    //         ClientId: '6lf5mkel9kcp68hog30i0p7gtp', \r\n    //     };\r\n    //     var userDataPool = new AWSCognito.CognitoUserPool(cognitoPoolCredentials);\r\n    //     var currentUser = userDataPool.getCurrentUser();\r\n    \r\n    //     console.log(\"cognito user\", currentUser);\r\n        \r\n    //     if (currentUser != null) {\r\n    //         currentUser.getSession(function(err, session) {\r\n    //             if (err) {\r\n    //                 alert(err.message || JSON.stringify(err));\r\n    //                 return;\r\n    //             }\r\n    //             console.log('session validity: ' + session.isValid());\r\n        \r\n    //             // NOTE: getSession must be called to authenticate user before calling getUserAttributes\r\n    //             currentUser.getUserAttributes(function(err, attributes) {\r\n    //                 if (err) {\r\n    //                     // Handle error\r\n    //                     console.log(err);\r\n    //                 } else {\r\n    //                     // Do something with attributes\r\n    //                     console.log(attributes);\r\n    //                 }\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    getUserData(user) {\r\n        console.log(\"Called backend for user data\");\r\n        this.getUserDataFromBackend(user)\r\n            .then(json => {\r\n                console.log(json);\r\n                if (Array.isArray(json)) {\r\n                    this.setState({\r\n                        dataofuserDynamo: json\r\n                    });\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to fetch user data \", reason);\r\n            });\r\n    }\r\n    getAdminData() {\r\n        console.log(\"Called backend for admin data\");\r\n        this.getAdminDataFromBackend()\r\n            .then(json => {\r\n                console.log(json);\r\n                if (Array.isArray(json)) {\r\n                    this.setState({\r\n                        dataofuserDynamo: json\r\n                    });\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to fetch admin data\", reason);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        //console.log(\"sessionStorage\");\r\n        var sessiontoken = sessionStorage.getItem(\"token\");\r\n        console.log(sessiontoken);\r\n        //var decoded = jwt.decode(sessiontoken);\r\n        // get the decoded payload and header\r\n        var decrypttoken = jwt.decode(sessiontoken, { complete: true });\r\n        console.log(decrypttoken.header);\r\n        console.log(decrypttoken.payload);\r\n        //const userObj = decrypttoken.payload;\r\n        this.setState({\r\n            dataofuser: decrypttoken.payload\r\n        })\r\n        const isAdmin = decrypttoken.payload && decrypttoken.payload[\"cognito:groups\"] && decrypttoken.payload[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\r\n\r\n        this.setState({ isAdmin });\r\n        setTimeout(()=> {\r\n            console.log(\"Email:\"+this.state.dataofuser.email)\r\n            console.log(\"isAdmin:\"+this.state.isAdmin)\r\n            if (this.state.isAdmin){\r\n                this.getAdminData()\r\n            } else {\r\n                this.getUserData(this.state.dataofuser.email);\r\n            }\r\n        }, 500);\r\n        \r\n      \r\n        //this.getUser()\r\n    }\r\n    \r\n\r\n    onClickDownLoad(file) {\r\n        window.open(\"https://d2k9a10np1c61w.cloudfront.net/\" + file);\r\n    }\r\n\r\n    onClickDelete(fileName, id) {\r\n        this.deleteFile(fileName, id)\r\n            .then(json => {\r\n                console.log(json);\r\n                setTimeout(()=> {\r\n                if (this.state.isAdmin){\r\n                    this.getAdminData()\r\n                } else {\r\n                    this.getUserData(this.state.dataofuser.email);\r\n                }\r\n            }, 300);\r\n                \r\n            })\r\n            .catch(reason => {\r\n                console.log(\"Unable to delete at this time: \", reason);\r\n            });\r\n    }\r\n\r\n    // fetchListAgain\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { isAdmin } = this.state;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar className='colornav' variant=\"dark\">\r\n                    <Navbar.Brand><img src={logo} width = '200' height = '50' /></Navbar.Brand>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            {/* User Name: {this.state.dataofuser &&\r\n                                <a >{this.state.dataofuser.email}</a>} */}\r\n                            &nbsp;&nbsp;\r\n                            {\r\n                                isAdmin && <a style={{ fontWeight: 'bold' }}> AdminMode </a>\r\n                            }\r\n                            {/* {\r\n                                !isAdmin && <a> \"User\"</a>\r\n                            } */}\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                    {this.state.dataofuser && <LogOut></LogOut>}\r\n                    {!this.state.dataofuser && <LogInPage></LogInPage>}\r\n                </Navbar>\r\n                <div><br></br><br></br><center><h4>Welcome {this.state.dataofuser &&\r\n                                <a >{this.state.dataofuser.email}</a>}. Now you can  keep everything organized, secure and easy to access.&nbsp;&nbsp;\r\n                               </h4></center></div>\r\n                {/* <a> {this.state.dataofuser.email}</a> */}\r\n                {\r\n                    this.state.dataofuser &&\r\n                    <FileUpload\r\n                        user={this.state.dataofuser.email}\r\n                        desc={this.state.desc}\r\n                        refreshList={e => this.getAdminData()}\r\n                        refreshList2={e => this.getUserData(e)}\r\n                        isAdmin={isAdmin}\r\n                    >\r\n                    </FileUpload>\r\n                }\r\n\r\n\r\n                <div style={{ \"margin\": \"50px\" }}>\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr key={0}>\r\n                                {\r\n                                    isAdmin &&\r\n                                    <th>User Name</th>\r\n                                }\r\n\r\n                                <th>File Name</th>\r\n                                <th>Description</th>\r\n                                <th>File Upload Time</th>\r\n                                <th>File Updated Time</th>\r\n                                <th>Download</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.dataofuserDynamo.map(item => {\r\n                                    return (\r\n                                        <tr key={item.userId}>\r\n                                            {\r\n                                                isAdmin &&\r\n                                                <td>{item.userName}</td>\r\n                                            }\r\n\r\n                                            <td>{item.fileName}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{new Date(item.fileCreatedTime).toLocaleString()}</td>\r\n                                            <td>{new Date(item.fileUpdatedTime).toLocaleString()}</td>\r\n                                            <td><Button variant=\"outline-success\" onClick={event => this.onClickDownLoad(item.fileName)}>\r\n                                                Download\r\n                                                {/* <a href={\"https://d3k2ba7dd5osnx.cloudfront.net/\" + item.fileName} target=\"_blank\" download={item.fileName}>DownLoad</a> */}\r\n                                            </Button></td>\r\n                                            <td><Button variant=\"outline-danger\" onClick={event => this.onClickDelete(item.fileName, item.userId)}>\r\n                                                Delete\r\n                                            </Button></td>\r\n                                        </tr>\r\n\r\n                                    );\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserPage"]},"metadata":{},"sourceType":"module"}