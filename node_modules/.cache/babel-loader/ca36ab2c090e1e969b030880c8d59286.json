{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Documents\\\\Dropbox\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nvar jwt = require('jsonwebtoken');\n\nclass FileUpload extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      descr: \"\",\n      result: \"\"\n    };\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  sendFiletoBackend(fileslist, username, desc) {\n    const backendapi = {\n      URL: \"http://localhost:3001\"\n    };\n    const detailsofForm = new FormData();\n    detailsofForm.append('inputFile', fileslist);\n    detailsofForm.append('userName', username);\n    detailsofForm.append('description', desc);\n    const backendparameters = {\n      method: 'POST',\n      body: detailsofForm\n    };\n    console.log(backendparameters);\n    return fetch(\"\".concat(backendapi.URL, \"/uploadfile\"), backendparameters).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  fileUpload() {\n    if (this.state.files.length > 0) {\n      this.sendFiletoBackend(this.state.files[0], this.props.username, this.state.descr).then(json => {\n        console.log(json);\n        this.setState({\n          result: \"Successfully uploaded file\"\n        });\n        setTimeout(() => {\n          if (this.props.isAdmin) {\n            this.props.userlistrefresh();\n          } else {\n            this.props.adminlistrefresh(this.props.username);\n          }\n        }, 500);\n      }).catch(reason => {\n        console.log(reason);\n        this.props.userlistrefresh();\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        backgroundColor: 'gray',\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Upload your files here: \", this.state.result, \" \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: list => this.setState({\n        files: list.target.files\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: des => this.setState({\n        descr: des.target.value\n      }),\n      placeholder: \"Enter...\",\n      type: \"text\",\n      name: \"descr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"\\xA0 \\xA0\", React.createElement(Button, {\n      onClick: this.fileUpload,\n      style: {\n        backgroundColor: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/Checkout/Documents/Dropbox/src/components/FileUpload.jsx"],"names":["React","PureComponent","Card","Button","jwt","require","FileUpload","constructor","props","state","files","descr","result","fileUpload","bind","sendFiletoBackend","fileslist","username","desc","backendapi","URL","detailsofForm","FormData","append","backendparameters","method","body","console","log","fetch","then","response","length","json","setState","setTimeout","isAdmin","userlistrefresh","adminlistrefresh","catch","reason","render","backgroundColor","color","list","target","des","value"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Card, Button } from 'react-bootstrap';\r\nvar jwt = require('jsonwebtoken');\r\n\r\nclass FileUpload extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            files: [],\r\n            descr: \"\",\r\n            result: \"\"\r\n        }\r\n        this.fileUpload = this.fileUpload.bind(this);\r\n    }\r\n\r\n    sendFiletoBackend(fileslist, username, desc) {\r\n        const backendapi = {\r\n            URL: \"http://localhost:3001\"\r\n        }\r\n        const detailsofForm = new FormData();\r\n        detailsofForm.append('inputFile', fileslist);\r\n        detailsofForm.append('userName', username);\r\n        detailsofForm.append('description', desc);\r\n        const backendparameters = {\r\n            method: 'POST',\r\n            body: detailsofForm,\r\n        }\r\n        console.log(backendparameters);\r\n        return fetch(`${backendapi.URL}/uploadfile`, backendparameters).then(response => {\r\n          console.log(response);\r\n            return response;\r\n        })\r\n    }\r\n\r\n    fileUpload() {\r\n        if (this.state.files.length > 0) {\r\n            this.sendFiletoBackend(this.state.files[0], this.props.username, this.state.descr)\r\n                .then(json => {\r\n                    console.log(json);\r\n                    this.setState({\r\n                        result: \"Successfully uploaded file\"\r\n                    }); \r\n                    setTimeout(()=> {\r\n                        if (this.props.isAdmin){\r\n                            this.props.userlistrefresh();\r\n                        } else {\r\n                            this.props.adminlistrefresh(this.props.username);\r\n                        } \r\n                    }, 500);\r\n\r\n                })\r\n                .catch(reason => {\r\n                    console.log(reason);\r\n                    this.props.userlistrefresh();\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header style={{\r\n        backgroundColor: 'gray',\r\n        color: 'black'\r\n      }}> Upload your files here: {this.state.result} </Card.Header>\r\n                    <Card.Body>\r\n                        <input type=\"file\"  onChange={list => this.setState({\r\n                            files: list.target.files\r\n                        })}> \r\n                        </input>\r\n                       <input\r\n                            \r\n                            onChange={des => this.setState({\r\n                                descr: des.target.value\r\n                            })}\r\n                            placeholder=\"Enter...\"\r\n                            type=\"text\"\r\n                            name=\"descr\"\r\n                        />\r\n                        &nbsp; &nbsp;\r\n                        <Button onClick={this.fileUpload} style={{\r\n        backgroundColor: 'green'\r\n      }}>Upload</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}